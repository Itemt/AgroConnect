# Generated by Django 4.2.24 on 2025-10-05 17:53

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(blank=True, choices=[('Productor', 'Productor'), ('Comprador', 'Comprador')], max_length=10, null=True)),
                ('cedula', models.CharField(blank=True, help_text='Número de cédula de identidad', max_length=20, null=True, unique=True, verbose_name='Cédula')),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/', verbose_name='Imagen de Perfil')),
                ('can_sell', models.BooleanField(default=False, help_text='Indica si el usuario puede crear publicaciones y vender productos', verbose_name='¿Puede vender?')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProducerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('departamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Departamento')),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad/Municipio')),
                ('direccion', models.CharField(blank=True, help_text='Ej: Vereda, finca, sector específico', max_length=255, null=True, verbose_name='Dirección específica')),
                ('location', models.CharField(blank=True, help_text='Campo legacy - se actualizará automáticamente', max_length=255, null=True)),
                ('farm_description', models.TextField(blank=True, null=True, verbose_name='Descripción de la Finca')),
                ('main_crops', models.CharField(blank=True, max_length=255, null=True, verbose_name='Cultivos Principales')),
                ('total_ventas', models.IntegerField(default=0, verbose_name='Total de Ventas')),
                ('ingresos_totales', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Ingresos Totales')),
                ('calificacion_promedio', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='Calificación Promedio como Vendedor')),
                ('total_calificaciones', models.IntegerField(default=0, verbose_name='Total de Calificaciones Recibidas')),
                ('fecha_primera_venta', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Primera Venta')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='producer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BuyerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Nombre de la Empresa')),
                ('business_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Tipo de Negocio')),
                ('departamento', models.CharField(blank=True, max_length=100, null=True, verbose_name='Departamento')),
                ('ciudad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ciudad/Municipio')),
                ('total_compras', models.IntegerField(default=0, verbose_name='Total de Compras')),
                ('gastos_totales', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Gastos Totales')),
                ('fecha_primera_compra', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Primera Compra')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='buyer_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
